name: CI/CD Control

on:
  pull_request:
    branches: ["master", "staging", "main"]
  push:
    branches: ["version-*"]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11 in test
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Install test dependencies
        run: |
          pip install --upgrade pip
          pip install -U pip setuptools
          pip install poetry
          poetry install
      - name: Pytest
        run: |
          poetry run pytest ./tests
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11 in lint
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Install lint dependencies
        run: |
          pip install --upgrade pip
          pip install -U pip setuptools
          pip install poetry
          poetry install
      - name: Lint src
        run: |
          poetry run pylint ./tests ./project_manager
  publish:
    runs-on: ubuntu-latest
    needs: [lint, test]
    env:
      PUBLISH: ${{ secrets.PUBLISH }}
      LAMBDA_NAME: ${{ secrets.LAMBDA_NAME }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    if: contains(github.ref, 'refs/heads/version-')
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        if: contains(env.PUBLISH, 'true')
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Install poetry
        if: contains(env.PUBLISH, 'true')
        run: |
          pip install --upgrade pip
          pip install -U pip setuptools
          pip install poetry
      - name: Build package
        if: contains(env.PUBLISH, 'true')
        run: |
          poetry install
          make build_src
      - name: Publish package
        if: contains(env.PUBLISH, 'true')
        run: |
          aws lambda update-function-code --function-name $LAMBDA_NAME --zip-file fileb://deployment_package.zip